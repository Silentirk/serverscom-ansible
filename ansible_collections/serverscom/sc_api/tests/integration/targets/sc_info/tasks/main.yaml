---
- name: Check if there are sc_token and sc_endpoint variables
  no_log: true
  fail:
    msg: 'You need to define sc_token and sc_endpoint variables in tests/integration/integration_config.yml'
  when: not sc_endpoint or not sc_token

- name: Test invalid token
  sc_info:
    token: invalid
    endpoint: '{{ sc_endpoint }}'
  register: test1
  failed_when:
    - test1 is success
    - sc_endpoint not in test1.api_url
    - test1.status_code != 401

- name: Test2, Simple get
  sc_info:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
  register: test2

- name: Check Test2
  assert:
    that:
      - test2 is not changed
      - test2.locations|length >= 1
      - test2.regions|length >= 1
      - test2.locations[0].id is defined
      - test2.locations[0].name is defined
      - test2.locations[0].code is defined
      - test2.regions[0].code is defined
      - test2.regions[0].id is defined
      - test2.regions[0].name is defined

- name: Test3, Search for location
  sc_info:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    scope: locations
    search_pattern: US
  register: test3

- name: Check Test3
  assert:
    that:
     - test3.locations|length >= 1
     - test3.regions is undefined
     - test3.locations[0]
     - "'AMS1' not in test3|string"
     - "'DFW1' in test3|string"

- name: Test3, Filter by features
  sc_info:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    scope: locations
    required_features:
      - disaggregated_public_ports
      - load_balancers_enabled
  register: test4

- name: Check Test4
  assert:
    that:
     - test4.locations|length >= 1
     - test4.locations[0]
     - '"disaggregated_public_ports" in test4.locations|to_nice_yaml'
     - '"load_balancers_enabled: false" not in test4.locations|to_nice_yaml'
